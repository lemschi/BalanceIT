name: Test project

on: [push, pull_request]

jobs:
  testAllModes:
    name: Test in ${{ matrix.testMode }}
    runs-on: ubuntu-latest

    # Globale Umgebungsvariablen hinzugefügt, um Redundanz zu vermeiden
    env: # Änderung: UNITY-Umgebungsvariablen zentralisiert
      UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
      UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
      UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}

    strategy:
      fail-fast: false
      matrix:
        projectPath:
          - BalanceITUnityGame # Änderung: Korrekte Referenz für den Pfad
        testMode:
          - playmode
          - editmode
          - standalone
    
    steps:
      # 1. Repository Checkout
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          lfs: true

      # 2. Unity Library Caching
      - name: Cache Unity Library
        uses: actions/cache@v3
        with:
          path: ${{ matrix.projectPath }}/Library # Änderung: Richtige Referenz zu `matrix.projectPath`
          key: Library-${{ matrix.projectPath }}-Windows
          restore-keys: | # Änderung: Zusätzliche Restore-Keys für bessere Trefferquote
            Library-${{ matrix.projectPath }}-
            Library-
            default

      # 3. Unity Tests
      - name: Run tests
        id: tests # Änderung: ID hinzugefügt, um Outputs zu referenzieren
        uses: game-ci/unity-test-runner@v4
        with:
          projectPath: ${{ matrix.projectPath }}
          testMode: ${{ matrix.testMode }}
          artifactsPath: ${{ matrix.testMode }}-artifacts # Änderung: Syntaxfehler mit Leerzeichen behoben
          githubToken: ${{ secrets.GITHUB_TOKEN }}
          checkName: ${{ matrix.testMode }} Test Results
          unityVersion: 2023.2.20f1

      # 4. Build-Schritt (nur bei Erfolg der Tests)
      - name: Build project
        if: success() # Änderung: Bedingte Ausführung des Build-Schritts
        uses: game-ci/unity-builder@v4
        with:
          projectPath: ${{ matrix.projectPath }} # Änderung: Einheitliche Nutzung von `matrix.projectPath`
          targetPlatform: WebGL
          allowDirtyBuild: true

      # 5. Ergebnisse hochladen
      - name: Upload Test Results
        uses: actions/upload-artifact@v3
        if: always() # Ergebnisse werden unabhängig vom Teststatus hochgeladen
        with:
          name: Test results for ${{ matrix.testMode }}
          path: ${{ steps.tests.outputs.artifactsPath }} # Änderung: Outputs korrekt referenziert
