name: Test project

on: [push, pull_request, workflow_dispatch]

jobs:
  testAllModes:
    name: Test in ${{ matrix.testMode }}
    runs-on: ubuntu-latest

    # Globale Umgebungsvariablen hinzugefügt, um Redundanz zu vermeiden
    env:
      UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
      UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
      UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}

    strategy:
      fail-fast: false
      matrix:
        projectPath:
          - BalanceITUnityGame
        testMode:
          - playmode
          - editmode
          - standalone
    
    steps:
      # 1. Runner Disk Cleanup
      - name: Cleanup disk space
        run: |
          docker system prune --all --force
          docker volume prune --force
          
      # 2. Repository Checkout
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          lfs: true

      # 3. Unity Library Caching
      - name: Cache Unity Library
        uses: actions/cache@v3
        with:
          path: ${{ matrix.projectPath }}/Library
          key: Library-${{ matrix.projectPath }}-Windows
          restore-keys: |
            Library-${{ matrix.projectPath }}-
            Library-
            default

      # 4. Unity Tests
      - name: Run tests
        id: tests
        uses: game-ci/unity-test-runner@v4
        with:
          projectPath: ${{ matrix.projectPath }}
          testMode: ${{ matrix.testMode }}
          artifactsPath: ${{ matrix.testMode }}-artifacts
        env:
          ARTIFACTS_PATH: ${{ matrix.testMode }}-artifacts

      # 5. Build-Schritt (nur bei Erfolg der Tests)
      - name: Build project
        if: steps.tests.outcome == 'success'
        uses: game-ci/unity-builder@v4
        with:
          projectPath: ${{ matrix.projectPath }}
          targetPlatform: WebGL
          allowDirtyBuild: true

      # 6. Ergebnisse hochladen
      - name: Upload Test Results
        uses: actions/upload-artifact@v3
        if: always() # Ergebnisse werden unabhängig vom Teststatus hochgeladen
        with:
          name: Test results for ${{ matrix.testMode }}
          path: ${{ matrix.testMode }}-artifacts
          
      # 7. Cleanup Build Output
      - name: Cleanup build output
        if: always()
        run: |
          rm -rf build/*
          docker volume prune --force
