name: CI/CD - Test - FEATURES BRANCH

on:
    pull_request:
      branches: 'features'
    merge_group:
      types: [checks_requested]
    push:
      branches:
        - 'features'
      paths:
        - 'BalanceITUnityGame/Assets/**'
        - 'BalanceITUnityGame/Packages/**'
        - 'BalanceITUnityGame/ProjectSettings/**'
    workflow_dispatch: {}
jobs:
    # Testrunner Step
    testProject:
        name: Testrun Ubuntu
        runs-on: ubuntu-latest
        steps:
            #Repo Checkout
            - name: Checkout Repo
              uses: actions/checkout@v4
            #Cache
            - name: Cache Step
              uses: actions/cache@v4
              with:
                path: BalanceITUnityGame/Library
                key: Library-BalanceITUnityGame-${{  matrix.testMode  }}
            #Tests Runnen mit GameCI
            - name: Run ${{  matrix.testMode }}
              id: testrun
              uses: game-ci/unity-test-runner@v4
              env:
                UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
                UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
                UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
              with:
                projectPath: BalanceITUnityGame
                githubToken: ${{ secrets.GITHUB_TOKEN }}
                testMode: ${{ matrix.testMode  }}
                artifactsPath: ${{  matrix.testMode  }}-artifacts
            #TestResults uploaden
            - name: Upload Test Result
              uses: actions/upload-artifact@v4
              if: always()
              with:
                name: Test results for ${{  matrix.testMode  }}
                path: ${{ matrix.testMode  }}-artifacts
        strategy:
            fail-fast: false 
            matrix:
              testMode:
                - PlayMode
                - EditMode
                - Standalone